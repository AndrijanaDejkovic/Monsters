<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>